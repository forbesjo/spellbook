#!/usr/bin/env node
var Run = require('./utils/run');
var CommanderWrapper = require('./utils/commander-wrapper');
var PathsExist = require('./utils/paths-exist');
var path = require('path');
var config = require('./utils/get-config')();

var program = CommanderWrapper(function(commander) {
  return commander
    .option('-w, --watch', 'watch files for changes and re-lint')
    .option('-e, --errors', 'only log errors')
    .option('-f, --fix', 'does not work for this binary');
});

if (!config.css) {
  log.warn('CSS linting is turned off');
  process.exit();
}

var commands = [];

if (PathsExist(path.join(config.css.src, 'index.css'))) {
  commands.push(['sb-lint-css-css']);
}

if (PathsExist(path.join(config.css.src, 'index.scss')) ||
    PathsExist(path.join(config.css.src, 'index.sass'))) {
    commands.push(['sb-lint-css-sass']);
}

commands = commands.map(function(command) {
  if (program.watch) {
    command.push('--watch');
  }
  if (program.errors) {
    command.push('--errors');
  }
  if (program.fix) {
    command.push('--fix');
  }
  return command;
});

Run.parallel(commands, {failAfter: true});
